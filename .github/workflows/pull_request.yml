name: Pull Request Checks

# Run this workflow every time a new pull request is opened
# and when commits are pushed to an existing PR
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  # Set the job key. This key is displayed as the job name
  # when a job name is not provided
  pr-checks:
    name: Pull Request Checks
    runs-on: ubuntu-latest
    env:
      # Set an environment variable for the publishing dev
      # This is used in to make a unique canary release to npm
      PR_DEV: ${{ github.actor }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          # Removes credentials
          persist-credentials: false
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Runs actions specific script that does not fix errors
      - name: Check linting
        run: yarn run lint-ci

      # Ensure that their are no errors in the Storybook build
      - name: Check Storybook build
        run: yarn storybook-smoke-test

      - name: Setup .npmrc file to publish to npm
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: Set GitHub Action user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Build new package
        run: yarn run build

      - name: Tag canary release
        run: yarn run release-canary

      - name: Capture new version
        run: VERSION=$(node -p "require('./package.json').version")

      - name: Update PR with version
        uses: tzkhan/pr-update-action@v2
        with:
          repo-token: "${{ secrets.GH_ACTION_PAT }}"
          body-template: |
            ## Description
            - Release version: [<VERSION_NUMBER>](https://www.npmjs.com/package/@f-design/component-library)
          body-update-action: 'prefix'

      - name: Publish @f-design/component-library beta release from PR branch
        run: npm publish --tag canary --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}