name: Pull Request Checks

# Run this workflow every time a new pull request is opened
# and when commits are pushed to an existing PR
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  # Set the job key. This key is displayed as the job name
  # when a job name is not provided
  pr-checks:
    name: Pull Request Checks
    runs-on: ubuntu-latest
    env:
      # Set an environment variable for the publishing dev
      # This is used in to make a unique canary release to npm
      PR_DEV: ${{ github.actor }}
      UUID: ''
      VERSION: ''
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          # Removes credentials
          persist-credentials: false
          fetch-depth: 0

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Runs actions specific script that does not fix errors
      - name: Check linting
        run: yarn run lint-ci

      # Ensure that their are no errors in the Storybook build
      - name: Check Storybook build
        run: yarn storybook-smoke-test

      - name: Setup .npmrc file to publish to npm
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: Set GitHub Action user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Build new package
        run: yarn run build

      # - name: Push updates to PR branch
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GH_ACTION_PAT }}
      #     branch: ${{ github.head_ref }}

      - name: Set UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1
        with:
          name: ${{ github.sha }}
      # use the output from the `generate-uuid` step
      - name: Get the UUID
        run: echo "UUID is ${{ steps.generate-uuid.outputs.uuid }}"

      - name: Set UUID to env variable
        run: echo "UUID=${{ steps.generate-uuid.outputs.uuid }}" >> $GITHUB_ENV

      - name: Tag canary release
        run: yarn run release-canary

      - name: Publish @f-design/component-library canary release from PR branch
        run: npm publish --tag canary --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Capture new version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Canary release

      - name: Create comment
        if: ${{ steps.fc.outputs.comment-id == 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Canary release :hatched_chick:

            To test your changes, run the below in a test repo:
            ```terminal
            yarn add @f-design/component-library@${{ env.VERSION }}
            ```

      - name: Update comment
        if: ${{ steps.fc.outputs.comment-id != 0 }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            Canary release :hatched_chick:

            To test your changes, run the below in a test repo:
            ```terminal
            yarn add @f-design/component-library@${{ env.VERSION }}
            ```