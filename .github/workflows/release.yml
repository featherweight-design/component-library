name: Publish new release from main
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  update-version-changelog:
    # This ensures that this workflow only runs when a PR is being merged to 'main'
    if: github.event.pull_request.merged == true
    name: Publish new release from main
    runs-on: ubuntu-latest
    env:
      VERSION: ''
    steps:
      - name: Checkout development
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Setup .npmrc file to publish to npm
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      # This is required for publishing from GH Actions
      - name: Set GitHub Action user
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Update CHANGELOG/version
        run: yarn release

      # Ensure main is in sync
      - name: Push to main
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_ACTION_PAT }}
          branch: main

      # Build the component library
      - name: Build new package
        run: yarn run build

      # Publish a new release to NPM
      - name: Publish @f-design/component-library from main
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      # Post Slack notification about release
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: component-library
          SLACK_ICON_EMOJI: ':sewing_needle:'
          SLACK_MESSAGE: |
            Version: ${{ env.VERSION }}
            Install with `yarn add @f-design/component-library`
          SLACK_TITLE: Release of Component Library successful!
          SLACK_USERNAME: FWD-Bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
