@import './colors.scss';

@mixin focus-styles {
  outline: none;
  box-shadow: 0 0 3px 2px $brand-focus-outline;
}

@mixin error-focus-styles {
  outline: none;
  box-shadow: 0 0 3px 2px $destructive-focus-outline;
}

@mixin input-base-styles {
  height: 2.5rem;
  padding: 0.5rem 1rem;
  border: 1px solid $gray-09;
  border-radius: 0.25rem;
  font-size: 1rem;
  box-sizing: border-box;
}

@mixin gradientPseudoBorder($color-1, $color-2) {
  content: '';
  position: absolute;
  height: 1px;
  width: 100%;
  background: linear-gradient(
    90deg,
    $color-1 0%,
    $color-2 25%,
    $color-2 75%,
    $color-1 100%
  );
}

@mixin gradientPseudoBorderBottom($color-1: $gray-04, $color-2: $gray-07) {
  @include gradientPseudoBorder($color-1, $color-2);
  bottom: 0;
}

@mixin gradientPseudoBorderTop($color-1: $gray-04, $color-2: $gray-07) {
  @include gradientPseudoBorder($color-1, $color-2);
  top: 0;
}

// Check-mark animation influenced by and tweaked from
// https://codepen.io/scottloway/pen/zqoLyQ
@mixin check-mark-animation(
  $width,
  $height,
  $thickness,
  $timing: 0.4s,
  $color: $white
) {
  position: absolute;
  top: $height;
  left: $width;
  height: $height;
  width: $width;
  border-right: $thickness solid $color;
  border-top: $thickness solid $color;
  transform: scaleX(-1) rotate(135deg);
  transform-origin: left top;
  animation: $timing ease check-mark;

  @keyframes check-mark {
    0% {
      height: 0;
      width: 0;
      opacity: 1;
    }
    20% {
      height: 0;
      width: $width;
      opacity: 1;
    }
    40% {
      height: $height;
      width: $width;
      opacity: 1;
    }
    100% {
      height: $height;
      width: $width;
      opacity: 1;
    }
  }
}

// Color contrast mixin tweaked and based on
// https://medium.com/@jonnykates/automating-colour-contrast-ratios-with-sass-e201f3b52797
@function text-contrast($hex-value) {
  $color-brightness: round(
    (red($hex-value) * 0.299) + (green($hex-value) * 0.587) +
      (blue($hex-value) * 0.114)
  );
  $light-color: round(
    (red(#ffffff) * 0.299) + (green(#ffffff) * 0.587) + (blue(#ffffff) * 0.114)
  );

  @if abs($color-brightness) < ($light-color / 2) {
    @return white;
  } @else {
    @return black;
  }
}

@mixin side-navigation-dark {
  border: 1px solid $cool-gray-17;
  background-color: $cool-gray-11;
  &__logo-back {
    color: $cool-gray-17;
  }
  &__logo-text {
    color: $cool-gray-17;
    &-hidden {
      color: transparent;
    }
  }
  &__option-menu {
    &-selected {
      background-color: $cool-gray-14;
    }
  }
  &__floating-icon-background {
    &-transitioning {
      background: $white;
    }
  }
  &__icon-background {
    &-selected {
      background: $white;
    }
  }
  &__option-title {
    color: $white;
    &-selected {
      color: $white;
    }
    &-hidden {
      color: transparent;
    }
  }
  &__option-icon {
    color: $white;
    &-selected {
      color: $brand-color;
    }
  }
  &__option-hover-menu {
    border: 1px solid $cool-gray-17;
    background-color: $cool-gray-11;
  }
  &__option-hover-title {
    border-bottom: 1px solid $cool-gray-17;
    color: $white;
  }
  &__sub-option {
    &-selected {
      background-color: $cool-gray-17;
    }
    &:hover {
      background-color: $cool-gray-17;
      > .fd-side-navigation__sub-option-text {
        color: $brand-white;
      }
    }
  }
  &__sub-option-text {
    color: $brand-xx-light;
    &.selected {
      color: $brand-white;
    }
  }
  &__collapse-toggle {
    color: $white;
    &:hover {
      color: $brand-xx-light;
      > * {
        color: $brand-xx-light;
      }
    }
    &::before {
      @include gradientPseudoBorderTop($cool-gray-11, $cool-gray-17);
    }
  }
  &__collapse-icon {
    color: $cool-gray-17;
  }
  &-collapse-text {
    &-hidden {
      color: transparent;
    }
  }
}
